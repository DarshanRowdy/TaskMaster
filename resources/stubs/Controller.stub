<?php

namespace App\Http\Controllers;

use App\Http\Requests\{{modelName}}Request;
use App\{{modelName}};

class {{modelName}}Controller extends BaseApiController
{
    public function index()
    {
        $this->_checkAuth();
        try{
            ${{modelNamePluralLowerCase}} = {{modelName}}::latest()->get();
        } catch (\Exception $exception){
            $this->_sendErrorResponse(404);
        }
        $response = ['{{modelNamePluralLowerCase}}' => ${{modelNamePluralLowerCase}}];
        $this->_sendResponse($response, '{{modelNamePluralLowerCase}} listing Success');
    }

    public function store({{modelName}}Request $request)
    {
        $this->_checkAuth();
        try{
            ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());
        } catch (\Exception $exception){
            $this->_sendErrorResponse(400);
        }
        $response = ['{{modelNamePluralLowerCase}}' => ${{modelNamePluralLowerCase}}];
        $this->_sendResponse($response, '{{modelNamePluralLowerCase}} created success');
    }

    public function show($id)
    {
        $this->_checkAuth();
        try{
            ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
        } catch (\Exception $exception){
            $this->_sendErrorResponse(400);
        }
        $response = ['{{modelNamePluralLowerCase}}' => ${{modelNamePluralLowerCase}}];
        $this->_sendResponse($response, '{{modelNamePluralLowerCase}} found success');
    }

    public function update({{modelName}}Request $request, $id)
    {
        $this->_checkAuth();
        try{
            ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
            ${{modelNameSingularLowerCase}}->update($request->all());
        } catch (\Exception $exception){
            $this->_sendErrorResponse(400);
        }
        $response = ['{{modelNameSingularLowerCase}}' => ${{modelNameSingularLowerCase}}];
        $this->_sendResponse($response, '{{modelNameSingularLowerCase}} update success');
    }

    public function destroy($id)
    {
        $this->_checkAuth();
        try{
            ${{modelNameSingularLowerCase}} = {{modelName}}::destroy($id);
        } catch (\Exception $exception){
            $this->_sendErrorResponse(204);
        }
        $response = ['{{modelNameSingularLowerCase}}' => ${{modelNameSingularLowerCase}}];
        $this->_sendResponse($response, '{{modelNameSingularLowerCase}} delete successfully');
    }
}